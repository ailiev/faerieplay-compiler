2006-09-21  Alex Iliev  <sasho@pipe.cs.dartmouth.edu>

	* CircGen.hs (genCircuit): Shuffled the steps around a bit - Lit
	gate compaction should be before trimming.
	(collapse_lit_gates): This was removing gates too early, leaving
	their children without those in-edges; got rid of all
	gate-deletion from here.

2006-09-19  Alex Iliev  <sasho@pipe.cs.dartmouth.edu>

	* CircGen.hs (collapse_lit_gates): Added, to remove duplicate Lit
	gates and re-patch the circuit.
	* Runtime.hs (getMArrIndices): Added, to abstract getting the
	indices of an MArray, as the API is different in ghc 6.4 and 6.5
	* Mapping.hs: Added an instance of Mapping for Data.Map.
	* SashoLib.hs (repeatM): new
	(liftArgM): new
	(getBits, bitMask): moved here.

2006-09-18  Alex Iliev  <sasho@pipe.cs.dartmouth.edu>

	* CircGen.hs (genStm): WriteDynArray gate gets the index
	expression as an annotation.
	(genExp'): Same for ReadDynArray.
	* SFDL.cf: aligned better.
	* TypeChecker.hs: put in some more EStatic's, especially where
	array indices are generated.

2006-09-17  Alex Iliev  <sasho@pipe.cs.dartmouth.edu>

	* CircGen.hs (cctShowsGate): Modifed the gate comment to mention
	if an input is static (to mark direct array access); and to use
	the gate's first (not last) Exp annotation for Input gates, as the
	first should be the name of the variable which gets the input.

2006-05-12  Alex Iliev  <sasho@pipe.cs.dartmouth.edu>

	* Runtime.hs: Had swapped right shift and left shift, fixed.

2006-04-16  Alex Iliev  <sasho@pipe.cs.dartmouth.edu>

	* Unroll.hs: stuuupid bug in unrolling for-loops counting
	backwards - was counting up instead of down as I forgot to reverse
	the list.

2006-03-23  Alex Iliev  <sasho@pipe.cs.dartmouth.edu>

	* Unroll.hs: enable the for-loop to count forwards and backwards
	by 1, depending on the relation of the endpoints.

2006-02-21  Alex Iliev  <sasho@pipe.cs.dartmouth.edu>

	* sfdlc.hs: expanding the command line options to control the run
	file and output file better.

	* Runtime.hs: added printing of the input values of every gate.

