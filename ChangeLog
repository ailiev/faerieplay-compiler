2006-10-13  Alex Iliev  <sasho@pipe.cs.dartmouth.edu>

	* HoistStms.hs (flatten SPrint): add assignments *to* the
	expressions after the SPrint.

	* TypeChecker.hs (checkStm SPrint): make sure expressions are
	legal lval's.


	
	* SashoLib.hs (trs): added.

	* sfdlc.hs (g_version): Expanded to include date and svn revision,
	nicely formatted.

	* CircGen.hs (createInputGates): Cleaned up comment generation on
	Input gates, so the full expression is shown, and not just the
	last field name.

	* Intermediate.hs (docExp): Added support for printing struct
	field names if available through a type annotation.

2006-10-05  Alex Iliev  <sasho@pipe.cs.dartmouth.edu>

	* ErrorWithContext.hs: Added; an extended Error type, with a stack
	of contexts of the error; and the <?> operator to add to an error
	context when "unwinding" the call stack.

	* TypeChecker.hs (setContext): Added; to enable annotation of an
	error message with its stack of contexts, using <?>
	operator. Added calls to setContext to many of the check*
	functions.
	(checkLVal): expanded the lval check.
	(checkExp EArr): changed the first call to Im.expandType so it
	does not recurse into array element types.
	(typeCheck): Modifed the Monad for all the functions to be ErrorT
	applied to State; this changed the main call to 'checkProg' in
	'typeCheck'.

	* CircGen.hs: Completed support for runtime flags - now control
	treatment of SPrint nodes.

	* sfdlc.hs: Added g_svn_date; moved DumpGates and DumpGraph into
	RunFlags.

	* Intermediate.hs: stuff related to ErrorWithContext.

	* Unroll.hs: Like in TypeChecker.hs, changed the Monad to ErrorT.

	* Common.hs: stuff related to ErrorWithContext.

	.
2006-10-03  Alex Iliev  <sasho@pipe.cs.dartmouth.edu>

	* Stack.hs (): Added, moving stuff out of SashoLib.hs

	* Common.hs: Added RunFlags, to carry runtime flags from the
	command line etc, to all parts of the program.

	* CircGen.hs (): removed the Lit table in MyState.
	(): Added initial support for RunFlags, carried in MyState.

	* many: Added OPTIONS_GHC pragmas on top.
	
	* SashoLib.hs (zipWith3M): added.

	* Common.hs (logmsg): added.

	* CircGen.hs (keepNodes): Make it use a Set instead of IntSet; it
	seems a tad faster in this case.
	(): removed all the XDR stuff at the end.

	* sfdlc.hs: moved LogPrio to Common.hs

	* CircGen.hs (genCondExit): Fixed bugs where Output flag was not
	being transferred to a Select gate from its input gate.

2006-09-26  Alex Iliev  <sasho@pipe.cs.dartmouth.edu>

	* SashoLib.hs: new or imported: compareWith, class DocAble,
	expand.

	* Mapping.hs: new instance for IntMap.

	* Container.hs: new Instance for IntSet. Changed the Container
	class to use functional dependencies; without that the IntSet
	instance was not going anywhere.

	* HoistStms.hs (flatten): Hoist expressions out of an SPrint
	statement, so only simple vars are in there, as the CircGen wants.

	* GraphLib.hs: Mostly new; needs commenting as some of the things
	are fragile. Moved some functions (pruneGraph, graph2adjList,
	showGraph etc.) from UDraw.hs to here.
	(vmap_ordered): A bit of a hack to map a function on Contexts

	* CircGen.hs (collapse_lit_gates): fixed, which took a lot of
	poking around. I still think it's somewhat fragile.
	(genCircuit): Added a few checks for circuit invariant.
	(checkCircuit): do the invariant check.
	(keepNodes): use an IntSet to do the difference operation - big
	improvement, this took 60% of the runtime before (using
	List.(\\)), on Dijkstra with LOGN=4; would be worse for larger N.
	(showCctGraph): Expanded the UDrawGraph presentation a bit.
	
2006-09-21  Alex Iliev  <sasho@pipe.cs.dartmouth.edu>

	* CircGen.hs (genCircuit): Shuffled the steps around a bit - Lit
	gate compaction should be before trimming.
	(collapse_lit_gates): This was removing gates too early, leaving
	their children without those in-edges; got rid of all
	gate-deletion from here.

2006-09-19  Alex Iliev  <sasho@pipe.cs.dartmouth.edu>

	* CircGen.hs (collapse_lit_gates): Added, to remove duplicate Lit
	gates and re-patch the circuit.
	* Runtime.hs (getMArrIndices): Added, to abstract getting the
	indices of an MArray, as the API is different in ghc 6.4 and 6.5
	* Mapping.hs: Added an instance of Mapping for Data.Map.
	* SashoLib.hs (repeatM): new
	(liftArgM): new
	(getBits, bitMask): moved here.

2006-09-18  Alex Iliev  <sasho@pipe.cs.dartmouth.edu>

	* CircGen.hs (genStm): WriteDynArray gate gets the index
	expression as an annotation.
	(genExp'): Same for ReadDynArray.
	* SFDL.cf: aligned better.
	* TypeChecker.hs: put in some more EStatic's, especially where
	array indices are generated.

2006-09-17  Alex Iliev  <sasho@pipe.cs.dartmouth.edu>

	* CircGen.hs (cctShowsGate): Modifed the gate comment to mention
	if an input is static (to mark direct array access); and to use
	the gate's first (not last) Exp annotation for Input gates, as the
	first should be the name of the variable which gets the input.

2006-05-12  Alex Iliev  <sasho@pipe.cs.dartmouth.edu>

	* Runtime.hs: Had swapped right shift and left shift, fixed.

2006-04-16  Alex Iliev  <sasho@pipe.cs.dartmouth.edu>

	* Unroll.hs: stuuupid bug in unrolling for-loops counting
	backwards - was counting up instead of down as I forgot to reverse
	the list.

2006-03-23  Alex Iliev  <sasho@pipe.cs.dartmouth.edu>

	* Unroll.hs: enable the for-loop to count forwards and backwards
	by 1, depending on the relation of the endpoints.

2006-02-21  Alex Iliev  <sasho@pipe.cs.dartmouth.edu>

	* sfdlc.hs: expanding the command line options to control the run
	file and output file better.

	* Runtime.hs: added printing of the input values of every gate.

