-*- text -*-

<date>Wed Mar 22 16:46:29 2006</date>

enable for-loops to count up as well as down, depending on the relative values
of the endpoints.
DONE

<date>Mon Mar 27 21:36:34 2006</date>

do not treat the function name as an implicit local variable, but just treat an
assignment like
f = val;
as if it were
return val;
in more normal languages (see how Pascal semantics are perhaps)



<date>Sat Apr  1 22:53:23 2006</date>

Maybe annotate invalid values somehow - eg division by zero, array read/write
out of bounds, so if any make it to the output, we may know where the problem
comes from. ie. use an Either value :)



<date>Mon Aug 28 17:16:45 2006</date>

Add support for statement labels, which propagate to gates to facilitate lining
up the circuit and the code.


<date>Fri Sep  8 17:25:02 2006</date>

Add more comments to the .runtime file, to make it easier to figure out by
manual inspection. Eg. comment what a scalar types bitsize is, if it's actually
a Bool, etc.

<date>Wed Sep 13 13:13:15 2006</date>

CHECK: how do we make sure that the variables in a conditional's condition are
used with values from before the conditional, and not values generated inside
the conditional? Since I believe the condition's gate(s) are generated after the
branches.


<date>Wed Sep 27 10:27:30 2006</date>

specify how input and output owners are specified in the program, and handled in
execution. will be an important part of the software manual. Also, need a more
solid way to specify input/output names, and owners. Could be done via the
comment field, but that seems not very "serious". Can be made serious by
specifying it exactly.
DONE: more or less - we'll leave the task of specifying I/O owners to other
components and not the compiler - it can just take input as args to main, and
outputs as returns of main.


<date>Fri Oct 13 16:05:13 2006</date>

Standardize all the variable location nomencalture in CircGen---right now have
VarTable, setVarAddrs, etc - make those LocTable, setVarLoc, etc.
DONE


<date>Mon Oct 23 11:11:22 2006</date>

Remove the depth stuff, we don't need it with array gates with a gate-enable.


<date>Mon Oct 30 11:55:06 2006</date>

Remove the VarSet's on SIfElse in Intermediate. The case with SIfElse seems to
be the same as with SFor, and VarSet is not needed, it's needed only for SBlock.

<date>Mon Oct 30 13:05:08 2006</date>

Do away with the bit-size expansion on addition etc, in TypeChecker. arithmetic
should just preserve bit size. Or think it over a bit.


<date>Mon Oct 30 13:15:59 2006</date>

Should we add default initialization to declared vars (as is done now, in
TypeChecker.mkVarInits)? Seems not, should have an error if var used
uninitialized. But the error would only be caught in CircGen, where we're
assuming no user errors remain.
