// -*- c -*-
/*
 * Circuit compiler for the Faerieplay hardware-assisted secure
 * computation project at Dartmouth College.
 *
 * Copyright (C) 2003-2007, Alexander Iliev <sasho@cs.dartmouth.edu> and
 * Sean W. Smith <sws@cs.dartmouth.edu>
 *
 * All rights reserved.
 *
 * This code is released under a BSD license.
 * Please see LICENSE.txt for the full license and disclaimers.
 *
 */

program TestRef
{

    const WordSize = 32;
    type Word = Int<WordSize>;

    const REPEAT = 10;

    function Word accumulate (Word & accum, Word x) {
	accum = accum + x;
	accumulate = 0;
    }

    // result should be:
    // a + REPEAT*b
    // important point is that it's done via a reference parameter.
    function Word sfdlmain (Word a, Word b) {
	var Word accum;

	accum = a;
	
	for (i = 1 to REPEAT) {
	    var Word dummy;
	    dummy = accumulate (accum, b);
	}

	sfdlmain = accum;
    }
    
}
