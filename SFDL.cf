-- -*- haskell -*-
-- Javalette Light: a simple subset of C, covering
-- programs with a single zero-argument function.
-- example: koe.jll

-- modified by sasho starting May 2005
-- to cover SFDL

---------------


-----------
-- ordinary rules
-----------

-- program
Fun.      Prog     ::= Typ Ident "(" ")" "{" [Stm] "}" ;

-- statements
SDecl.    Stm      ::= Typ Var ";"  ;
SAss.     Stm      ::= Var "=" Exp ";"  ;
SIncr.    Stm      ::= Var "++" ";"  ;

SWhile.   Stm      ::= "while" "(" Exp ")" "{" [Stm] "}" ;
SFor.     Stm      ::= "for"   "(" Var "=" Exp "to" Exp ")" "{" [Stm] "}" ;
SIf.      Stm      ::= "if"    "(" Exp ")" "{" [Stm] "}" ;

-- expressions
ELt.      Exp0     ::= Exp1 "<" Exp1 ;
EPlus.    Exp1     ::= Exp1 "+" Exp2 ;
ETimes.   Exp2     ::= Exp2 "*" Exp3 ;

EVar.     Exp3     ::= Var ;

EInt.     Exp3     ::= Integer ;
EDouble.  Exp3     ::= Double ;

-- variables
VName.    Var      ::= Ident ;

[].       [Stm]    ::= ;
(:).      [Stm]    ::= Stm [Stm] ;



---------
-- coercions
---------
_.      Stm      ::= Stm ";" ;

_.      Exp      ::= Exp0 ;
_.      Exp0     ::= Exp1 ;
_.      Exp1     ::= Exp2 ;
_.      Exp2     ::= Exp3 ;
_.      Exp3     ::= "(" Exp ")" ;

TInt.     Typ  ::= "int" ;
TDouble.  Typ  ::= "double" ;

-- pragmas

internal ExpT. Exp ::= Typ Exp ;

comment "/*" "*/" ;
comment "//" ;

entrypoints Prog, Stm, Exp ;
